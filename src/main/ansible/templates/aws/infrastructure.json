{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "AWS CloudFormation Template for Cloudera CDH Test Environment Infrastructure",

    "Mappings" : {
        "NetworkConfig" : {
            "VPC"    : { "CIDR" : "10.0.0.0/16" },
            "Subnet" : { "CIDR" : "10.0.0.0/24" }
        }
    },

    "Resources" : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "EnableDnsSupport"   : "true",
                "EnableDnsHostnames" : "true",
                "CidrBlock" : {
                     "Fn::FindInMap" : [ "NetworkConfig", "VPC", "CIDR" ]
                },
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "AWS Infrastructure (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "Subnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "CidrBlock" : {
                    "Fn::FindInMap" : [ "NetworkConfig", "Subnet", "CIDR" ]
                },
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "AWS Infrastructure (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "AWS Infrastructure (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "GatewayToInternet" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "AWS Infrastructure (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "SubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },

        "NetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "AWS Infrastructure (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "InboundTCPNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "InboundUDPNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "150",
                "Protocol" : "17",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "OutboundTCPNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "OutboundUDPNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "150",
                "Protocol" : "17",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },

        "SubnetNetworkAclAssociation" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },

        "PrivateDNSZone" : {
            "Type" : "AWS::Route53::HostedZone",
            "Properties" : {
                "HostedZoneConfig" : {
                    "Comment" : { "Fn::Join": [ "", [
                        "Private Zone for AWS Infrastructure (", { "Ref" : "AWS::StackName" },
                         ") Region ", { "Ref" : "AWS::Region" }
                    ]]}
                },
                "Name" : "aws.cleo.net",
                "VPCs" : [{
                    "VPCId"     : { "Ref" : "VPC" },
                    "VPCRegion" : { "Ref" : "AWS::Region" }
                }]
            }
        },

        "ReverseDNSZone" : {
            "Type" : "AWS::Route53::HostedZone",
            "Properties" : {
                "HostedZoneConfig" : {
                    "Comment" : { "Fn::Join": [ "", [
                        "Reverse Zone for AWS Infrastructure (", { "Ref" : "AWS::StackName" },
                         ") Region ", { "Ref" : "AWS::Region" }
                    ]]}
                },
                "Name" : "0.10.in-addr.arpa",
                "VPCs" : [{
                    "VPCId"     : { "Ref" : "VPC" },
                    "VPCRegion" : { "Ref" : "AWS::Region" }
                }]
            }
        }
    },

    "Outputs" : {
        "StackName" : {
            "Description" : "AWS CloudFormation Stack Name",
            "Value" : { "Ref" : "AWS::StackName" }
        },
        "Region" : {
            "Description" : "AWS Region",
            "Value" : { "Ref" : "AWS::Region" }
        },
        "VPC" : {
            "Description" : "AWS VPC ID",
            "Value" : { "Ref" : "VPC" }
        },
        "Subnet" : {
            "Description" : "AWS Subnet ID",
            "Value" : { "Ref" : "Subnet" }
        },
        "DNSZonePrivate" : {
            "Description" : "AWS Private DNS Zone ID",
            "Value" : { "Ref" : "PrivateDNSZone" }
        },
        "DNSZoneReverse" : {
            "Description" : "AWS Reverse DNS Zone ID",
            "Value" : { "Ref" : "ReverseDNSZone" }
        }
    }
}
