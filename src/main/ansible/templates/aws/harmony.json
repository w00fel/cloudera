{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "AWS CloudFormation Template for Cleo Harmony",
    "Parameters" : {
        "BuildBucket" : {
            "Description" : "S3 bucket containing templates and scripts. [Don't change]",
            "Type" : "String",
            "Default" : "cleo-cdh-aws"
        },

        "ServerType" : {
            "Description" : "EC2 instance type for the Harmony Server",
            "Type" : "String",
            "Default" : "t2.large",
            "AllowedValues" : [
                "t2.large",
                "m4.large"
            ]
        },

        "KeyName" : {
            "Description" : "Name of an existing EC2 KeyPair",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },

        "DNSZonePrivate" : {
            "Description" : "Zone ID of the Private Hosted Route53 Zone",
            "Type" : "AWS::Route53::HostedZone::Id"
        },

        "DNSZoneReverse" : {
            "Description" : "Zone ID of the Reverse Hosted Route53 Zone",
            "Type" : "AWS::Route53::HostedZone::Id"
        },

        "HarmonyVersion" : {
            "Description" : "Harmony Server base version to install",
            "Type" : "String",
            "Default" : "5.3-SNAPSHOT"
        },

        "HarmonyPatch" : {
            "Description" : "Harmony Server patch version to install",
            "Type" : "String",
            "Default" : ""
        },

        "HDFSURIVersion" : {
            "Description" : "HDFS URI version to install",
            "Type" : "String",
            "Default" : "0.0.2-SNAPSHOT"
        },

        "KerberosHost" : {
            "Description" : "Kerberos server",
            "Type" : "String"
        },

        "ManagerHost" : {
            "Description" : "CDH Manager server",
            "Type" : "String"
        },

        "PrivateKeyURL" : {
            "Description" : "Private Key URL",
            "Type" : "String"
        },

        "Subnet" : {
            "Description" : "Subnet ID",
            "Type" : "AWS::EC2::Subnet::Id"
        },

        "VPC" : {
            "Description" : "VPC ID",
            "Type" : "AWS::EC2::VPC::Id"
        }
    },

    "Mappings" : {
        "UbuntuAMI" : {
            "Description" :    "Ubuntu Server 14.04 LTS (HVM), SSD Volume Type",
            "us-east-1" :      { "AMI" : "ami-d05e75b8" },
            "us-west-1" :      { "AMI" : "ami-df6a8b9b" },
            "us-west-2" :      { "AMI" : "ami-5189a661" },
            "eu-west-1" :      { "AMI" : "ami-47a23a30" },
            "eu-central-1" :   { "AMI" : "ami-accff2b1" },
            "ap-northeast-1" : { "AMI" : "ami-936d9d93" },
            "ap-southeast-1" : { "AMI" : "ami-96f1c1c4" },
            "ap-southeast-2" : { "AMI" : "ami-69631053" },
            "sa-east-1" :      { "AMI" : "ami-4d883350" }
        }
    },

    "Resources" : {
        "SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : { "Fn::Join" : [ "", [
                    "Harmony Server (", { "Ref" : "AWS::StackName" }, ")"
                ]]},
                "VpcId" : { "Ref" : "VPC" },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "123",
                        "ToPort"     : "123",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "5000",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "udp",
                        "FromPort"   : "1",
                        "ToPort"     : "65535",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ],
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "Harmony Server (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    }
                ]
            }
        },

        "User" : {
            "Type" : "AWS::IAM::User"
        },

        "AccessKey" : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : { "Ref" : "User" }
            }
        },

        "Role" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [{
                        "Effect" : "Allow",
                        "Principal" : { "Service": [ "ec2.amazonaws.com" ] },
                        "Action" : [ "sts:AssumeRole" ]
                    }]
                }
            }
        },

        "S3Policy" : {
            "Type": "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "ClusterS3",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "s3:GetObject"
                            ],
                            "Resource" : [ { "Fn::Join" : [ "", [
                                "arn:aws:s3:::", { "Ref" : "BuildBucket" }, "/*"
                            ]]}]
                        }
                    ]
                },
                "Roles" : [
                    { "Ref" : "Role" }
                ],
                "Users" : [
                    { "Ref" : "User" }
                ]
            }
        },

        "Route53Policy" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "Route53Policy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "route53:GetHostedZone",
                                "route53:ListHostedZones",
                                "route53:ListResourceRecordSets",
                                "route53:ChangeResourceRecordSets"
                            ],
                            "Resource" : [
                                "arn:aws:route53:::hostedzone/*"
                            ]
                        }
                    ]
                },
                "Roles" : [
                    { "Ref" : "Role" }
                ],
                "Users" : [
                    { "Ref" : "User" }
                ]
            }
        },

        "TagsPolicy" : {
            "Type": "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "TagsPolicy",
                "PolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Action" : [
                                "ec2:DescribeTags"
                            ],
                            "Resource" : [
                                "*"
                            ]
                        }
                    ]
                },
                "Roles" : [
                    { "Ref" : "Role" }
                ],
                "Users" : [
                    { "Ref" : "User" }
                ]
            }
        },

        "InstanceProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Roles" : [
                    { "Ref" : "Role" }
                ]
            }
        },

        "Instance" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Authentication" : { "S3AccessCreds" : {
                    "type"        : "S3",
                    "buckets"     : [ { "Ref" : "BuildBucket" } ],
                    "accessKeyId" : { "Ref" : "AccessKey" },
                    "secretKey"   : { "Fn::GetAtt" : ["AccessKey", "SecretAccessKey"] }
                }},
                "AWS::CloudFormation::Init" : { "config" : {
                    "files" : {
                        "/home/ubuntu/install.sh" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "install.sh"
                            ]]},
                            "context" : {
                                "bucket"  : { "Ref" : "BuildBucket" },
                                "version" : { "Ref" : "HarmonyVersion" },
                                "patch"   : { "Ref" : "HarmonyPatch" },
                                "hdfs-version" : "5.3.0.0-SNAPSHOT"
                            },
                            "mode" : "000755"
                        },
                        "/home/ubuntu/configure.sh" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "configure.sh"
                            ]]},
                            "context" : {
                                "managerHost" : { "Ref" : "ManagerHost" },
                                "kdcHost"     : { "Ref" : "KerberosHost" }
                            },
                            "mode" : "000755"
                        },
                        "/home/ubuntu/route53.sh" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                    "aws", "route53.sh"
                            ]]},
                            "context" : {
                                "region"        : { "Ref" : "AWS::Region" },
                                "privateZone"   : { "Ref" : "DNSZonePrivate" },
                                "reverseZone"   : { "Ref" : "DNSZoneReverse" }
                            },
                            "mode" : "000755"
                        },
                        "/home/ubuntu/cdh-ftp.xml" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "cdh-ftp.xml"
                            ]]},
                            "mode" : "000640"
                        },
                        "/home/ubuntu/local-ftp.xml" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "local-ftp.xml"
                            ]]},
                            "mode" : "000640"
                        },
                        "/home/ubuntu/remote-ftp.xml" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "remote-ftp.xml"
                            ]]},
                            "mode" : "000640"
                        },
                        "/home/ubuntu/local-listener.xml" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "local-listener.xml"
                            ]]},
                            "mode" : "000640"
                        },
                        "/home/ubuntu/Harmony/license_key.txt" : {
                            "source" : { "Fn::Join" : [ "/", [
                                "https://s3.amazonaws.com", { "Ref" : "BuildBucket" },
                                "harmony", "license_key.txt"
                            ]]},
                            "mode" : "000644"
                        },
                        "/home/ubuntu/.ssh/id_rsa" : {
                            "source" : { "Ref" : "PrivateKeyURL" },
                            "mode" : "000400"
                        }
                    },
                    "packages" : {
                        "apt" : {
                            "default-jre" : []
                        }
                    }
                }}
            },
            "Properties" : {
                "InstanceType" : { "Ref" : "ServerType" },
                "IamInstanceProfile" : { "Ref" : "InstanceProfile" },
                "KeyName"  : { "Ref" : "KeyName" },
                "ImageId"  : { "Fn::FindInMap": [ "UbuntuAMI", { "Ref" : "AWS::Region" }, "AMI" ] },
                "NetworkInterfaces" : [{
                    "GroupSet"                 : [{ "Ref" : "SecurityGroup" }],
                    "SubnetId"                 : {  "Ref" : "Subnet" },
                    "AssociatePublicIpAddress" : "true",
                    "DeleteOnTermination"      : "true",
                    "DeviceIndex"              : "0"
                }],
                "Tags" : [
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [
                            "Harmony Server ", { "Ref" : "HarmonyPatch" },
                            " (", { "Ref" : "AWS::StackName" }, ")"
                        ]]}
                    },
                    {
                        "Key" : "group",
                        "Value" : "harmony"
                    }
                ],
                "UserData" : { "Fn::Base64" : { "Fn::Join" : [ "", [
                    "#!/bin/bash -ex\n",
                    "apt-get -m update\n",
                    "apt-get -y install unzip\n",
                    "apt-get -y install python-setuptools\n",
                    "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                    "#\n",
                    "cfn-init --stack ", { "Ref" : "AWS::StackName" },
                    "    --resource Instance",
                    "    --region ", { "Ref" : "AWS::Region" }, "\n",
                    "#\n",
                    "/home/ubuntu/route53.sh\n",
                    "chown -R ubuntu:ubuntu /home/ubuntu\n",
                    "sudo -u ubuntu /home/ubuntu/install.sh\n",
                    "sudo -u ubuntu /home/ubuntu/configure.sh\n",
                    "cp /home/ubuntu/krb5.conf /etc/krb5.conf\n",
                    "sudo -u ubuntu /home/ubuntu/Harmony/Harmonyd start\n",
                    "# Give server time to start up\n",
                    "sleep 60\n",
                    "#\n",
                    "cfn-signal --exit-code $? '", { "Ref" : "WaitHandle" }, "'\n"
                ]]}}
            }
        },

        "WaitHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "WaitCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "Instance",
            "Properties" : {
                "Handle" : {
                    "Ref" : "WaitHandle"
                },
                "Timeout" : "3600"
            }
        }
    },

    "Outputs" : {
        "StackName" : {
            "Description" : "AWS CloudFormation Stack Name",
            "Value" : { "Ref" : "AWS::StackName" }
        },
        "PublicIP" : {
            "Description" : "IP Address of the Harmony Server",
            "Value" : { "Fn::GetAtt" : ["Instance", "PublicIp"] }
        },
        "PublicDNS" : {
            "Description" : "Host Name of the Harmony Server",
            "Value" : { "Fn::GetAtt" : ["Instance", "PublicDnsName"] }
        }
    }
}
